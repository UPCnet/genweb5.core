# Nombre del workflow que se mostrará en la UI de GitHub

name: Buildout and QA

# Especificamos que queremos que se ejecute cada push 
on:
  push:
    branches:
      - cicd
      - master


# Aquí especificamos la lista de tareas que tiene que hacer en este workflow
jobs:
  # Empezamos con la tarea buildout que monatará el paquete para usarlo en los tests
  buildout:
    # Especificamos en que runner se ejecutará 
    # En este caso una máquina ubuntu en alguno de los servidores de GitHub
    runs-on: ubuntu-22.04

    # Estos son los pasos que tiene que seguir la terea para completarse
    steps:
      # Le decimos al runner que tiene que hacer un checkout de la rama 
      # para acceder a los ficheros y poder hacer el buildout
      - name: Checkout repo
        uses: actions/checkout@v3
      
      - name: Preapre python environment
        uses: ./.github/actions/setup_python_environment
      
      - name: Cache buildout
        id: cache-buildout
        uses: actions/cache@v3
        with:
          key:
            ${{ runner.os }}-build-${{ hashFiles('buildout.cfg', 'test_plone60.cfg', 'base.cfg') }}
          path: |
            ./eggs
            ./bin
            ./parts

      - name: Run buildout
        run: |
          source venv/bin/activate
          buildout -N -c buildout.cfg
        if: ${{ steps.cache-buildout.outputs.cache-hit != 'true' }}

  test:
    needs: buildout
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        
      - name: Preapare python environment
        uses: ./.github/actions/setup_python_environment
      
      - name: Restore cache buildout
        id: cache-buildout-restore
        uses: actions/cache/restore@v3
        with:
          key:
            ${{ runner.os }}-build-${{ hashFiles('buildout.cfg', 'test_plone60.cfg', 'base.cfg') }}
          path: |
            ./eggs
            ./bin
            ./parts

      - name: Run tests
        run: |
          tox -e py311-test
        if: ${{ steps.cache-buildout-restore.outputs.cache-hit != 'true' }}
  
  lint:
    needs: buildout
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        
      - name: Preapare python environment
        uses: ./.github/actions/setup_python_environment
      
      - name: Restore cache buildout
        id: cache-buildout-restore
        uses: actions/cache/restore@v3
        with:
          key:
            ${{ runner.os }}-build-${{ hashFiles('buildout.cfg', 'test_plone60.cfg', 'base.cfg') }}
          path: |
            ./eggs
            ./bin
            ./parts

      - name: Run linter
        run: |
          tox -e py311-lint
        if: ${{ steps.cache-buildout-restore.outputs.cache-hit != 'true' }}
  
  report:
    needs: [test, lint]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        
      - name: Preapare python environment
        uses: ./.github/actions/setup_python_environment
      
      - name: Run linter
        run: |
          echo "environment prepared"
          which python