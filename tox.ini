[tox]
# En envlist ponemos los entornos que queramos utilizar en el proyecto
# El formato es una lista de keys separada por comas
envlist =
    # Las keys que contienen py* son builtins
    # Esto quiere decir que tox las detecta y sabe interpretar que nos
    # referimos a nuestros intérpretes de python (py36 es python 3.6,
    # py37 python 3.7, etc.)
    py311-lint,
    py311-test

    # Estas keys son custom y tienen que definirse en este documento 
    # (por ejemplo, flake8 necesita [testenv:flake8])
    ; coverage-report

# Los intérpretes que no se encuentren en la máquina no serán probados
# De esta forma, podemos asegurar que si la pipeline falla, es por 
# culpa del código, no por la máquina en la que la pipeline se ejecuta
skip_missing_interpreters = True

# La part [testenv] es el comportamiento por defecto de cada una de las
# partes de tox. Si se sobreescribe alguno de los atributos 
# La parte [testenv] sirve para determinar las secciones del entorno
[testenv]
skip_install = true

# En el envlist de [tox] hemos declarado varios entornos py*-lint
# Tox sabe interpretar py*, pero no lint, así que se lo definimos aquí
[lint]
basepython = python3.11 # En caso que no se sobreescriba en el entorno que herede
deps = 
    -cconstraints.txt
    flake8
    # Helper para generar los reports HTML:
    flake8-html
    # Plugins de flake útiles específicos para Python y Plone:
    flake8-coding
    flake8-debugger
    flake8-deprecated
    flake8-print
    #flake8-pytest
    flake8-todo
    mccabe
    # Plugins potencialmente usables de flake8 (por determinar (TBD) en la 
    # comunidad Plone):
    #flake8-blind-except
    #flake8-commas
    #flake8-docstrings
    #flake8-mypy
    #flake8-pep3101
    #flake8-plone-hasattr
    #flake8-string-format
    #flake8_strict
    #flake8-quotes
    #flake8-polyfill
allowlist_externals =
    mkdir
commands = 
    mkdir -p {toxinidir}/reports/flake8
    flake8 --format=html --htmldir={toxinidir}/reports/flake8 --doctests {toxinidir}/src {toxinidir}/setup.py

[testenv:py311-lint]
basepython = python3.11
skip_install = true
deps = {[lint]deps}
commands = {[lint]commands}
allowlist_externals = {[lint]allowlist_externals}

[test]
basepython = python3.11 # En caso que no se sobreescriba en el entorno que herede
commands =
    bin/test
allowlist_externals =
    bin/test

[testenv:py311-test]
basepython = python3.11
skip_install = true
commands = {[test]commands}
allowlist_externals = {[test]allowlist_externals}